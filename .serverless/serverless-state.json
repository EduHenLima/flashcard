{
  "service": {
    "service": "aws-python",
    "serviceObject": {
      "name": "aws-python"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "environment": {
        "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
        "user": "flash",
        "password": "flashcard",
        "database": "flashcards"
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "PingLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-ping"
            }
          },
          "CreateUnderscorecardsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-create_cards"
            }
          },
          "GetUnderscorecardsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-get_cards"
            }
          },
          "GetUnderscorecardsUnderscorebyUnderscoretopicLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-get_cards_by_topic"
            }
          },
          "DeleteUnderscorecardsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-delete_cards"
            }
          },
          "UpdateUnderscorecardsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-update_cards"
            }
          },
          "CreateUnderscoretopicLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-create_topic"
            }
          },
          "GetUnderscoretopicLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-get_topic"
            }
          },
          "GetUnderscoretopicUnderscorebyUnderscorecategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-get_topic_by_category"
            }
          },
          "DeleteUnderscoretopicLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-delete_topic"
            }
          },
          "UpdateUnderscoretopicLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-update_topic"
            }
          },
          "CreateUnderscorecategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-create_category"
            }
          },
          "GetUnderscorecategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-get_category"
            }
          },
          "GetUnderscorecategoryUnderscorebyUnderscoreuserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-get_category_by_user"
            }
          },
          "DeleteUnderscorecategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-delete_category"
            }
          },
          "UpdateUnderscorecategoryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-update_category"
            }
          },
          "CreateUnderscoreloginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-create_login"
            }
          },
          "GetUnderscoreloginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-get_login"
            }
          },
          "DeleteUnderscoreloginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-delete_login"
            }
          },
          "UpdateUnderscoreloginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-dev-update_login"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "aws-python",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-python-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-python-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aws-python",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "arn:aws:iam::802587217904:root"
                    },
                    "Action": "sts:AssumeRole",
                    "Condition": {
                      "StringEquals": {
                        "sts:ExternalId": "ServerlessEnterprise-2763e3ef-f172-4ee5-8198-690f45460aa4"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "LogFilterAccess",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:FilterLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "PingLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateUnderscorecardsLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetUnderscorecardsLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetUnderscorecardsUnderscorebyUnderscoretopicLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DeleteUnderscorecardsLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdateUnderscorecardsLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateUnderscoretopicLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetUnderscoretopicLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetUnderscoretopicUnderscorebyUnderscorecategoryLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DeleteUnderscoretopicLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdateUnderscoretopicLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateUnderscorecategoryLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetUnderscorecategoryLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetUnderscorecategoryUnderscorebyUnderscoreuserLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DeleteUnderscorecategoryLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdateUnderscorecategoryLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "CreateUnderscoreloginLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "GetUnderscoreloginLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "DeleteUnderscoreloginLogGroup",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::GetAtt": [
                              "UpdateUnderscoreloginLogGroup",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "PingLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_ping.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-ping",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PingLogGroup"
            ]
          },
          "CreateUnderscorecardsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_create_cards.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-create_cards",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateUnderscorecardsLogGroup"
            ]
          },
          "GetUnderscorecardsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_get_cards.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-get_cards",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscorecardsLogGroup"
            ]
          },
          "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_get_cards_by_topic.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-get_cards_by_topic",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscorecardsUnderscorebyUnderscoretopicLogGroup"
            ]
          },
          "DeleteUnderscorecardsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_delete_cards.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-delete_cards",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteUnderscorecardsLogGroup"
            ]
          },
          "UpdateUnderscorecardsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_update_cards.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-update_cards",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateUnderscorecardsLogGroup"
            ]
          },
          "CreateUnderscoretopicLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_create_topic.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-create_topic",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateUnderscoretopicLogGroup"
            ]
          },
          "GetUnderscoretopicLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_get_topic.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-get_topic",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscoretopicLogGroup"
            ]
          },
          "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_get_topic_by_category.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-get_topic_by_category",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscoretopicUnderscorebyUnderscorecategoryLogGroup"
            ]
          },
          "DeleteUnderscoretopicLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_delete_topic.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-delete_topic",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteUnderscoretopicLogGroup"
            ]
          },
          "UpdateUnderscoretopicLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_update_topic.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-update_topic",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateUnderscoretopicLogGroup"
            ]
          },
          "CreateUnderscorecategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_create_category.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-create_category",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateUnderscorecategoryLogGroup"
            ]
          },
          "GetUnderscorecategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_get_category.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-get_category",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscorecategoryLogGroup"
            ]
          },
          "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_get_category_by_user.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-get_category_by_user",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscorecategoryUnderscorebyUnderscoreuserLogGroup"
            ]
          },
          "DeleteUnderscorecategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_delete_category.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-delete_category",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteUnderscorecategoryLogGroup"
            ]
          },
          "UpdateUnderscorecategoryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_update_category.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-update_category",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateUnderscorecategoryLogGroup"
            ]
          },
          "CreateUnderscoreloginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_create_login.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-create_login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateUnderscoreloginLogGroup"
            ]
          },
          "GetUnderscoreloginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_get_login.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-get_login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetUnderscoreloginLogGroup"
            ]
          },
          "DeleteUnderscoreloginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_delete_login.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-delete_login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteUnderscoreloginLogGroup"
            ]
          },
          "UpdateUnderscoreloginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z/aws-python.zip"
              },
              "Handler": "s_update_login.handler",
              "Runtime": "python3.9",
              "FunctionName": "aws-python-dev-update_login",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
                  "user": "flash",
                  "password": "flashcard",
                  "database": "flashcards"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateUnderscoreloginLogGroup"
            ]
          },
          "PingLambdaVersionkfucRC1QQHyL6kw1CkdiLIdgdDYPizwe5x1VTvJlE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PingLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "CreateUnderscorecardsLambdaVersionfj7oUDp2hj7UpKPWU2dZoyCtRGGhxBdFeztxCxht8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateUnderscorecardsLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "GetUnderscorecardsLambdaVersionRJXQqWLEgvModrAXfwqDWxAIfZYNJNFvoDPvgY8a43c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscorecardsLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaVersionWGXR9IebH8w4RGo6pWMx7QZnDM5F5ufNXjN02ipM7g": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "DeleteUnderscorecardsLambdaVersionQtHlBr0IN8NCjwXPTdboWrPdbX2KiyfIe2LgoIQRk1I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteUnderscorecardsLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "UpdateUnderscorecardsLambdaVersionpN9bbZCzx41uOmfWYiGP9i5WhNOOKUC2eQRTJFg2Mk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateUnderscorecardsLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "CreateUnderscoretopicLambdaVersionQxEsDYbv3NUS7Se3cUOXX07MUCVaYVg89zP3yys7xDc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateUnderscoretopicLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "GetUnderscoretopicLambdaVersionfaNMgPBxqARdhW7KqW89uEJpcPAP4z0W8fr5AIrX7k": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscoretopicLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaVersion0kk8i4MEDLZW3GFnfsVnQXAjFDQQkTsaTsmmLpwph4E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "DeleteUnderscoretopicLambdaVersionwNqkulrCH3laeywx9NI5mqefBYmnfz35YK7fkeU11U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteUnderscoretopicLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "UpdateUnderscoretopicLambdaVersion8M04T14UC2ekqgVqFZ5lybCK54TV1EJLasl8Khp6wvk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateUnderscoretopicLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "CreateUnderscorecategoryLambdaVersionjx6ERYIz4d1BeKCbdeQv1hqCzUnGOVNccNcIc1ljM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateUnderscorecategoryLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "GetUnderscorecategoryLambdaVersionoztj6JrAl41DyAuEeTkFv77unBSpVVgckIWeo9m40": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscorecategoryLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaVersione808pi2phW7MFuJaRd7Dg1gLsfskskKZC5GaK7Pek": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "DeleteUnderscorecategoryLambdaVersion399Ny5QA7gw9v2HYUlu2cM1HcGixeHWuB7rYEz9I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteUnderscorecategoryLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "UpdateUnderscorecategoryLambdaVersionQUR7pdNHPVMjalIiq3CaYP70PZgCNaPbQv1J2thm9k": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateUnderscorecategoryLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "CreateUnderscoreloginLambdaVersionJixg8WnldZUlaepeEMWYUTKVKq1YarNeb0eM0Gf7Z0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateUnderscoreloginLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "GetUnderscoreloginLambdaVersionF5oCch7nC0h8rpAYRkraUpiun6jFr71cNClcBfeAk8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetUnderscoreloginLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "DeleteUnderscoreloginLambdaVersionWpN0UjiOQcL0eXnBSKOWhsGGvDpeVBJskOTxhOyQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteUnderscoreloginLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "UpdateUnderscoreloginLambdaVersion1lwuD7BE3v0MHQFvix5oIJ5S2vDcJ9yWkNJzsGScM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateUnderscoreloginLambdaFunction"
              },
              "CodeSha256": "uqauCK5V6tZgy6yYYoclDn0mhJ2Hf4gnri0ngezSgJc="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-aws-python",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/http-api/aws-python-dev"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              },
              "AccessLogSettings": {
                "DestinationArn": {
                  "Fn::GetAtt": [
                    "HttpApiLogGroup",
                    "Arn"
                  ]
                },
                "Format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"apiId\":\"$context.apiId\",\"resourcePath\":\"$context.routeKey\",\"path\":\"$context.path\",\"httpMethod\":\"$context.httpMethod\",\"stage\":\"$context.stage\",\"status\":\"$context.status\",\"integrationStatus\":\"$context.integrationStatus\",\"integrationLatency\":\"$context.integrationLatency\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"errorMessage\":\"$context.error.message\",\"format\":\"SLS_HTTP_API_LOG\",\"version\":\"1.0.0\"}"
              }
            },
            "DependsOn": "HttpApiLogGroup"
          },
          "PingLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PingLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationPing": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PingLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetPing": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /ping",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationPing"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationPing"
          },
          "CreateUnderscorecardsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateUnderscorecardsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateUnderscorecards": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUnderscorecardsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostCreatecards": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /create_cards",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateUnderscorecards"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateUnderscorecards"
          },
          "GetUnderscorecardsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscorecardsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetUnderscorecards": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUnderscorecardsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetGetcards": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /get_cards",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetUnderscorecards"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetUnderscorecards"
          },
          "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetUnderscorecardsUnderscorebyUnderscoretopic": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUnderscorecardsUnderscorebyUnderscoretopicLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetGetcardsbytopic": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /get_cards_by_topic",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetUnderscorecardsUnderscorebyUnderscoretopic"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetUnderscorecardsUnderscorebyUnderscoretopic"
          },
          "DeleteUnderscorecardsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteUnderscorecardsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteUnderscorecards": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteUnderscorecardsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteDeletecards": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /delete_cards",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteUnderscorecards"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteUnderscorecards"
          },
          "UpdateUnderscorecardsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateUnderscorecardsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateUnderscorecards": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateUnderscorecardsLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutUpdatecards": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /update_cards",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateUnderscorecards"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateUnderscorecards"
          },
          "CreateUnderscoretopicLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateUnderscoretopicLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateUnderscoretopic": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUnderscoretopicLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostCreatetopic": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /create_topic",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateUnderscoretopic"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateUnderscoretopic"
          },
          "GetUnderscoretopicLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscoretopicLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetUnderscoretopic": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUnderscoretopicLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetGettopic": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /get_topic",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetUnderscoretopic"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetUnderscoretopic"
          },
          "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetUnderscoretopicUnderscorebyUnderscorecategory": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetGettopicbycategory": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /get_topic_by_category",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetUnderscoretopicUnderscorebyUnderscorecategory"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetUnderscoretopicUnderscorebyUnderscorecategory"
          },
          "DeleteUnderscoretopicLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteUnderscoretopicLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteUnderscoretopic": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteUnderscoretopicLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteDeletetopic": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /delete_topic",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteUnderscoretopic"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteUnderscoretopic"
          },
          "UpdateUnderscoretopicLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateUnderscoretopicLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateUnderscoretopic": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateUnderscoretopicLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutUpdatetopic": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /update_topic",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateUnderscoretopic"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateUnderscoretopic"
          },
          "CreateUnderscorecategoryLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateUnderscorecategoryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateUnderscorecategory": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUnderscorecategoryLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostCreatecategory": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /create_category",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateUnderscorecategory"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateUnderscorecategory"
          },
          "GetUnderscorecategoryLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscorecategoryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetUnderscorecategory": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUnderscorecategoryLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetGetcategory": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /get_category",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetUnderscorecategory"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetUnderscorecategory"
          },
          "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetUnderscorecategoryUnderscorebyUnderscoreuser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetGetcategorybyuser": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /get_category_by_user",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetUnderscorecategoryUnderscorebyUnderscoreuser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetUnderscorecategoryUnderscorebyUnderscoreuser"
          },
          "DeleteUnderscorecategoryLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteUnderscorecategoryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteUnderscorecategory": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteUnderscorecategoryLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteDeletecategory": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /delete_category",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteUnderscorecategory"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteUnderscorecategory"
          },
          "UpdateUnderscorecategoryLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateUnderscorecategoryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateUnderscorecategory": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateUnderscorecategoryLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutUpdatecategory": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /update_category",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateUnderscorecategory"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateUnderscorecategory"
          },
          "CreateUnderscoreloginLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateUnderscoreloginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateUnderscorelogin": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUnderscoreloginLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostCreatelogin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /create_login",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateUnderscorelogin"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateUnderscorelogin"
          },
          "GetUnderscoreloginLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetUnderscoreloginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetUnderscorelogin": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetUnderscoreloginLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetGetlogin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /get_login",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetUnderscorelogin"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetUnderscorelogin"
          },
          "DeleteUnderscoreloginLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteUnderscoreloginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationDeleteUnderscorelogin": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"DeleteUnderscoreloginLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteDeletelogin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /delete_login",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationDeleteUnderscorelogin"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationDeleteUnderscorelogin"
          },
          "UpdateUnderscoreloginLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateUnderscoreloginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationUpdateUnderscorelogin": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UpdateUnderscoreloginLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutUpdatelogin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /update_login",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationUpdateUnderscorelogin"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationUpdateUnderscorelogin"
          },
          "CWLSubFilterPingLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "PingLogGroup"
              }
            }
          },
          "CWLSubFilterCreateUnderscorecardsLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateUnderscorecardsLogGroup"
              }
            }
          },
          "CWLSubFilterGetUnderscorecardsLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetUnderscorecardsLogGroup"
              }
            }
          },
          "CWLSubFilterGetUnderscorecardsUnderscorebyUnderscoretopicLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetUnderscorecardsUnderscorebyUnderscoretopicLogGroup"
              }
            }
          },
          "CWLSubFilterDeleteUnderscorecardsLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DeleteUnderscorecardsLogGroup"
              }
            }
          },
          "CWLSubFilterUpdateUnderscorecardsLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdateUnderscorecardsLogGroup"
              }
            }
          },
          "CWLSubFilterCreateUnderscoretopicLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateUnderscoretopicLogGroup"
              }
            }
          },
          "CWLSubFilterGetUnderscoretopicLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetUnderscoretopicLogGroup"
              }
            }
          },
          "CWLSubFilterGetUnderscoretopicUnderscorebyUnderscorecategoryLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetUnderscoretopicUnderscorebyUnderscorecategoryLogGroup"
              }
            }
          },
          "CWLSubFilterDeleteUnderscoretopicLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DeleteUnderscoretopicLogGroup"
              }
            }
          },
          "CWLSubFilterUpdateUnderscoretopicLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdateUnderscoretopicLogGroup"
              }
            }
          },
          "CWLSubFilterCreateUnderscorecategoryLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateUnderscorecategoryLogGroup"
              }
            }
          },
          "CWLSubFilterGetUnderscorecategoryLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetUnderscorecategoryLogGroup"
              }
            }
          },
          "CWLSubFilterGetUnderscorecategoryUnderscorebyUnderscoreuserLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetUnderscorecategoryUnderscorebyUnderscoreuserLogGroup"
              }
            }
          },
          "CWLSubFilterDeleteUnderscorecategoryLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DeleteUnderscorecategoryLogGroup"
              }
            }
          },
          "CWLSubFilterUpdateUnderscorecategoryLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdateUnderscorecategoryLogGroup"
              }
            }
          },
          "CWLSubFilterCreateUnderscoreloginLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "CreateUnderscoreloginLogGroup"
              }
            }
          },
          "CWLSubFilterGetUnderscoreloginLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "GetUnderscoreloginLogGroup"
              }
            }
          },
          "CWLSubFilterDeleteUnderscoreloginLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "DeleteUnderscoreloginLogGroup"
              }
            }
          },
          "CWLSubFilterUpdateUnderscoreloginLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
              "LogGroupName": {
                "Ref": "UpdateUnderscoreloginLogGroup"
              }
            }
          },
          "CWLSubFilterHttpApiLogGroupUsEast1": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
              "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
              "FilterPattern": "\"SLS_HTTP_API_LOG\"",
              "LogGroupName": {
                "Ref": "HttpApiLogGroup"
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-aws-python-dev-ServerlessDeploymentBucketName"
            }
          },
          "EnterpriseLogAccessIamRole": {
            "Value": {
              "Fn::GetAtt": [
                "EnterpriseLogAccessIamRole",
                "Arn"
              ]
            },
            "Export": {
              "Name": "sls-aws-python-dev-EnterpriseLogAccessIamRole"
            }
          },
          "PingLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PingLambdaVersionkfucRC1QQHyL6kw1CkdiLIdgdDYPizwe5x1VTvJlE"
            },
            "Export": {
              "Name": "sls-aws-python-dev-PingLambdaFunctionQualifiedArn"
            }
          },
          "CreateUnderscorecardsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateUnderscorecardsLambdaVersionfj7oUDp2hj7UpKPWU2dZoyCtRGGhxBdFeztxCxht8"
            },
            "Export": {
              "Name": "sls-aws-python-dev-CreateUnderscorecardsLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscorecardsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscorecardsLambdaVersionRJXQqWLEgvModrAXfwqDWxAIfZYNJNFvoDPvgY8a43c"
            },
            "Export": {
              "Name": "sls-aws-python-dev-GetUnderscorecardsLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaVersionWGXR9IebH8w4RGo6pWMx7QZnDM5F5ufNXjN02ipM7g"
            },
            "Export": {
              "Name": "sls-aws-python-dev-GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunctionQualifiedArn"
            }
          },
          "DeleteUnderscorecardsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteUnderscorecardsLambdaVersionQtHlBr0IN8NCjwXPTdboWrPdbX2KiyfIe2LgoIQRk1I"
            },
            "Export": {
              "Name": "sls-aws-python-dev-DeleteUnderscorecardsLambdaFunctionQualifiedArn"
            }
          },
          "UpdateUnderscorecardsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateUnderscorecardsLambdaVersionpN9bbZCzx41uOmfWYiGP9i5WhNOOKUC2eQRTJFg2Mk"
            },
            "Export": {
              "Name": "sls-aws-python-dev-UpdateUnderscorecardsLambdaFunctionQualifiedArn"
            }
          },
          "CreateUnderscoretopicLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateUnderscoretopicLambdaVersionQxEsDYbv3NUS7Se3cUOXX07MUCVaYVg89zP3yys7xDc"
            },
            "Export": {
              "Name": "sls-aws-python-dev-CreateUnderscoretopicLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscoretopicLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscoretopicLambdaVersionfaNMgPBxqARdhW7KqW89uEJpcPAP4z0W8fr5AIrX7k"
            },
            "Export": {
              "Name": "sls-aws-python-dev-GetUnderscoretopicLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaVersion0kk8i4MEDLZW3GFnfsVnQXAjFDQQkTsaTsmmLpwph4E"
            },
            "Export": {
              "Name": "sls-aws-python-dev-GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunctionQualifiedArn"
            }
          },
          "DeleteUnderscoretopicLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteUnderscoretopicLambdaVersionwNqkulrCH3laeywx9NI5mqefBYmnfz35YK7fkeU11U"
            },
            "Export": {
              "Name": "sls-aws-python-dev-DeleteUnderscoretopicLambdaFunctionQualifiedArn"
            }
          },
          "UpdateUnderscoretopicLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateUnderscoretopicLambdaVersion8M04T14UC2ekqgVqFZ5lybCK54TV1EJLasl8Khp6wvk"
            },
            "Export": {
              "Name": "sls-aws-python-dev-UpdateUnderscoretopicLambdaFunctionQualifiedArn"
            }
          },
          "CreateUnderscorecategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateUnderscorecategoryLambdaVersionjx6ERYIz4d1BeKCbdeQv1hqCzUnGOVNccNcIc1ljM"
            },
            "Export": {
              "Name": "sls-aws-python-dev-CreateUnderscorecategoryLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscorecategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscorecategoryLambdaVersionoztj6JrAl41DyAuEeTkFv77unBSpVVgckIWeo9m40"
            },
            "Export": {
              "Name": "sls-aws-python-dev-GetUnderscorecategoryLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaVersione808pi2phW7MFuJaRd7Dg1gLsfskskKZC5GaK7Pek"
            },
            "Export": {
              "Name": "sls-aws-python-dev-GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunctionQualifiedArn"
            }
          },
          "DeleteUnderscorecategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteUnderscorecategoryLambdaVersion399Ny5QA7gw9v2HYUlu2cM1HcGixeHWuB7rYEz9I"
            },
            "Export": {
              "Name": "sls-aws-python-dev-DeleteUnderscorecategoryLambdaFunctionQualifiedArn"
            }
          },
          "UpdateUnderscorecategoryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateUnderscorecategoryLambdaVersionQUR7pdNHPVMjalIiq3CaYP70PZgCNaPbQv1J2thm9k"
            },
            "Export": {
              "Name": "sls-aws-python-dev-UpdateUnderscorecategoryLambdaFunctionQualifiedArn"
            }
          },
          "CreateUnderscoreloginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateUnderscoreloginLambdaVersionJixg8WnldZUlaepeEMWYUTKVKq1YarNeb0eM0Gf7Z0"
            },
            "Export": {
              "Name": "sls-aws-python-dev-CreateUnderscoreloginLambdaFunctionQualifiedArn"
            }
          },
          "GetUnderscoreloginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetUnderscoreloginLambdaVersionF5oCch7nC0h8rpAYRkraUpiun6jFr71cNClcBfeAk8"
            },
            "Export": {
              "Name": "sls-aws-python-dev-GetUnderscoreloginLambdaFunctionQualifiedArn"
            }
          },
          "DeleteUnderscoreloginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteUnderscoreloginLambdaVersionWpN0UjiOQcL0eXnBSKOWhsGGvDpeVBJskOTxhOyQ"
            },
            "Export": {
              "Name": "sls-aws-python-dev-DeleteUnderscoreloginLambdaFunctionQualifiedArn"
            }
          },
          "UpdateUnderscoreloginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateUnderscoreloginLambdaVersion1lwuD7BE3v0MHQFvix5oIJ5S2vDcJ9yWkNJzsGScM"
            },
            "Export": {
              "Name": "sls-aws-python-dev-UpdateUnderscoreloginLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-aws-python-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-aws-python-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "logs": {
        "httpApi": {
          "format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"apiId\":\"$context.apiId\",\"resourcePath\":\"$context.routeKey\",\"path\":\"$context.path\",\"httpMethod\":\"$context.httpMethod\",\"stage\":\"$context.stage\",\"status\":\"$context.status\",\"integrationStatus\":\"$context.integrationStatus\",\"integrationLatency\":\"$context.integrationLatency\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"errorMessage\":\"$context.error.message\",\"format\":\"SLS_HTTP_API_LOG\",\"version\":\"1.0.0\"}"
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "useDownloadCache": false,
        "dockerizePip": true
      }
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "ping": {
        "handler": "s_ping.handler",
        "events": [
          {
            "httpApi": "GET /ping",
            "resolvedMethod": "GET",
            "resolvedPath": "/ping"
          }
        ],
        "name": "aws-python-dev-ping",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "PingLambdaVersionkfucRC1QQHyL6kw1CkdiLIdgdDYPizwe5x1VTvJlE"
      },
      "create_cards": {
        "handler": "s_create_cards.handler",
        "events": [
          {
            "httpApi": "POST /create_cards",
            "resolvedMethod": "POST",
            "resolvedPath": "/create_cards"
          }
        ],
        "name": "aws-python-dev-create_cards",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "CreateUnderscorecardsLambdaVersionfj7oUDp2hj7UpKPWU2dZoyCtRGGhxBdFeztxCxht8"
      },
      "get_cards": {
        "handler": "s_get_cards.handler",
        "events": [
          {
            "httpApi": "GET /get_cards",
            "resolvedMethod": "GET",
            "resolvedPath": "/get_cards"
          }
        ],
        "name": "aws-python-dev-get_cards",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetUnderscorecardsLambdaVersionRJXQqWLEgvModrAXfwqDWxAIfZYNJNFvoDPvgY8a43c"
      },
      "get_cards_by_topic": {
        "handler": "s_get_cards_by_topic.handler",
        "events": [
          {
            "httpApi": "GET /get_cards_by_topic",
            "resolvedMethod": "GET",
            "resolvedPath": "/get_cards_by_topic"
          }
        ],
        "name": "aws-python-dev-get_cards_by_topic",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaVersionWGXR9IebH8w4RGo6pWMx7QZnDM5F5ufNXjN02ipM7g"
      },
      "delete_cards": {
        "handler": "s_delete_cards.handler",
        "events": [
          {
            "httpApi": "DELETE /delete_cards",
            "resolvedMethod": "DELETE",
            "resolvedPath": "/delete_cards"
          }
        ],
        "name": "aws-python-dev-delete_cards",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "DeleteUnderscorecardsLambdaVersionQtHlBr0IN8NCjwXPTdboWrPdbX2KiyfIe2LgoIQRk1I"
      },
      "update_cards": {
        "handler": "s_update_cards.handler",
        "events": [
          {
            "httpApi": "PUT /update_cards",
            "resolvedMethod": "PUT",
            "resolvedPath": "/update_cards"
          }
        ],
        "name": "aws-python-dev-update_cards",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "UpdateUnderscorecardsLambdaVersionpN9bbZCzx41uOmfWYiGP9i5WhNOOKUC2eQRTJFg2Mk"
      },
      "create_topic": {
        "handler": "s_create_topic.handler",
        "events": [
          {
            "httpApi": "POST /create_topic",
            "resolvedMethod": "POST",
            "resolvedPath": "/create_topic"
          }
        ],
        "name": "aws-python-dev-create_topic",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "CreateUnderscoretopicLambdaVersionQxEsDYbv3NUS7Se3cUOXX07MUCVaYVg89zP3yys7xDc"
      },
      "get_topic": {
        "handler": "s_get_topic.handler",
        "events": [
          {
            "httpApi": "GET /get_topic",
            "resolvedMethod": "GET",
            "resolvedPath": "/get_topic"
          }
        ],
        "name": "aws-python-dev-get_topic",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetUnderscoretopicLambdaVersionfaNMgPBxqARdhW7KqW89uEJpcPAP4z0W8fr5AIrX7k"
      },
      "get_topic_by_category": {
        "handler": "s_get_topic_by_category.handler",
        "events": [
          {
            "httpApi": "GET /get_topic_by_category",
            "resolvedMethod": "GET",
            "resolvedPath": "/get_topic_by_category"
          }
        ],
        "name": "aws-python-dev-get_topic_by_category",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaVersion0kk8i4MEDLZW3GFnfsVnQXAjFDQQkTsaTsmmLpwph4E"
      },
      "delete_topic": {
        "handler": "s_delete_topic.handler",
        "events": [
          {
            "httpApi": "DELETE /delete_topic",
            "resolvedMethod": "DELETE",
            "resolvedPath": "/delete_topic"
          }
        ],
        "name": "aws-python-dev-delete_topic",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "DeleteUnderscoretopicLambdaVersionwNqkulrCH3laeywx9NI5mqefBYmnfz35YK7fkeU11U"
      },
      "update_topic": {
        "handler": "s_update_topic.handler",
        "events": [
          {
            "httpApi": "PUT /update_topic",
            "resolvedMethod": "PUT",
            "resolvedPath": "/update_topic"
          }
        ],
        "name": "aws-python-dev-update_topic",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "UpdateUnderscoretopicLambdaVersion8M04T14UC2ekqgVqFZ5lybCK54TV1EJLasl8Khp6wvk"
      },
      "create_category": {
        "handler": "s_create_category.handler",
        "events": [
          {
            "httpApi": "POST /create_category",
            "resolvedMethod": "POST",
            "resolvedPath": "/create_category"
          }
        ],
        "name": "aws-python-dev-create_category",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "CreateUnderscorecategoryLambdaVersionjx6ERYIz4d1BeKCbdeQv1hqCzUnGOVNccNcIc1ljM"
      },
      "get_category": {
        "handler": "s_get_category.handler",
        "events": [
          {
            "httpApi": "GET /get_category",
            "resolvedMethod": "GET",
            "resolvedPath": "/get_category"
          }
        ],
        "name": "aws-python-dev-get_category",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetUnderscorecategoryLambdaVersionoztj6JrAl41DyAuEeTkFv77unBSpVVgckIWeo9m40"
      },
      "get_category_by_user": {
        "handler": "s_get_category_by_user.handler",
        "events": [
          {
            "httpApi": "GET /get_category_by_user",
            "resolvedMethod": "GET",
            "resolvedPath": "/get_category_by_user"
          }
        ],
        "name": "aws-python-dev-get_category_by_user",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaVersione808pi2phW7MFuJaRd7Dg1gLsfskskKZC5GaK7Pek"
      },
      "delete_category": {
        "handler": "s_delete_category.handler",
        "events": [
          {
            "httpApi": "DELETE /delete_category",
            "resolvedMethod": "DELETE",
            "resolvedPath": "/delete_category"
          }
        ],
        "name": "aws-python-dev-delete_category",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "DeleteUnderscorecategoryLambdaVersion399Ny5QA7gw9v2HYUlu2cM1HcGixeHWuB7rYEz9I"
      },
      "update_category": {
        "handler": "s_update_category.handler",
        "events": [
          {
            "httpApi": "PUT /update_category",
            "resolvedMethod": "PUT",
            "resolvedPath": "/update_category"
          }
        ],
        "name": "aws-python-dev-update_category",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "UpdateUnderscorecategoryLambdaVersionQUR7pdNHPVMjalIiq3CaYP70PZgCNaPbQv1J2thm9k"
      },
      "create_login": {
        "handler": "s_create_login.handler",
        "events": [
          {
            "httpApi": "POST /create_login",
            "resolvedMethod": "POST",
            "resolvedPath": "/create_login"
          }
        ],
        "name": "aws-python-dev-create_login",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "CreateUnderscoreloginLambdaVersionJixg8WnldZUlaepeEMWYUTKVKq1YarNeb0eM0Gf7Z0"
      },
      "get_login": {
        "handler": "s_get_login.handler",
        "events": [
          {
            "httpApi": "GET /get_login",
            "resolvedMethod": "GET",
            "resolvedPath": "/get_login"
          }
        ],
        "name": "aws-python-dev-get_login",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GetUnderscoreloginLambdaVersionF5oCch7nC0h8rpAYRkraUpiun6jFr71cNClcBfeAk8"
      },
      "delete_login": {
        "handler": "s_delete_login.handler",
        "events": [
          {
            "httpApi": "DELETE /delete_login",
            "resolvedMethod": "DELETE",
            "resolvedPath": "/delete_login"
          }
        ],
        "name": "aws-python-dev-delete_login",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "DeleteUnderscoreloginLambdaVersionWpN0UjiOQcL0eXnBSKOWhsGGvDpeVBJskOTxhOyQ"
      },
      "update_login": {
        "handler": "s_update_login.handler",
        "events": [
          {
            "httpApi": "PUT /update_login",
            "resolvedMethod": "PUT",
            "resolvedPath": "/update_login"
          }
        ],
        "name": "aws-python-dev-update_login",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "UpdateUnderscoreloginLambdaVersion1lwuD7BE3v0MHQFvix5oIJ5S2vDcJ9yWkNJzsGScM"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "org": "eduardolima",
      "app": "aws-python",
      "service": "aws-python",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "frameworkVersion": "3",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "app": "aws-python",
    "org": "eduardolima",
    "layers": {},
    "isDashboardMonitoringPreconfigured": true,
    "isDashboardAppPreconfigured": true,
    "orgUid": "2763e3ef-f172-4ee5-8198-690f45460aa4",
    "appUid": "rJLvSqJJ1dbtgBPc1K",
    "artifact": "/home/www/serverless-flashcard/.serverless/aws-python.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/aws-python/dev/1691859088278-2023-08-12T16:51:28.278Z",
    "artifact": "aws-python.zip"
  }
}