{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "PingLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-ping"
      }
    },
    "CreateUnderscorecardsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-create_cards"
      }
    },
    "GetUnderscorecardsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-get_cards"
      }
    },
    "GetUnderscorecardsUnderscorebyUnderscoretopicLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-get_cards_by_topic"
      }
    },
    "UpdateUnderscorecardsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-update_cards"
      }
    },
    "CreateUnderscoretopicLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-create_topic"
      }
    },
    "GetUnderscoretopicLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-get_topic"
      }
    },
    "GetUnderscoretopicUnderscorebyUnderscorecategoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-get_topic_by_category"
      }
    },
    "UpdateUnderscoretopicLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-update_topic"
      }
    },
    "CreateUnderscorecategoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-create_category"
      }
    },
    "GetUnderscorecategoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-get_category"
      }
    },
    "GetUnderscorecategoryUnderscorebyUnderscoreuserLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-get_category_by_user"
      }
    },
    "UpdateUnderscorecategoryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-update_category"
      }
    },
    "CreateUnderscoreloginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-create_login"
      }
    },
    "GetUnderscoreloginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-get_login"
      }
    },
    "UpdateUnderscoreloginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/aws-python-dev-update_login"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "aws-python",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-python-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-python-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "aws-python",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::802587217904:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "ServerlessEnterprise-2763e3ef-f172-4ee5-8198-690f45460aa4"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LogFilterAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:FilterLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "PingLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "CreateUnderscorecardsLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "GetUnderscorecardsLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "GetUnderscorecardsUnderscorebyUnderscoretopicLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "UpdateUnderscorecardsLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "CreateUnderscoretopicLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "GetUnderscoretopicLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "GetUnderscoretopicUnderscorebyUnderscorecategoryLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "UpdateUnderscoretopicLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "CreateUnderscorecategoryLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "GetUnderscorecategoryLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "GetUnderscorecategoryUnderscorebyUnderscoreuserLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "UpdateUnderscorecategoryLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "CreateUnderscoreloginLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "GetUnderscoreloginLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "UpdateUnderscoreloginLogGroup",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "PingLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_ping.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-ping",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PingLogGroup"
      ]
    },
    "CreateUnderscorecardsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_create_cards.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-create_cards",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateUnderscorecardsLogGroup"
      ]
    },
    "GetUnderscorecardsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_get_cards.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-get_cards",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetUnderscorecardsLogGroup"
      ]
    },
    "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_get_cards_by_topic.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-get_cards_by_topic",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetUnderscorecardsUnderscorebyUnderscoretopicLogGroup"
      ]
    },
    "UpdateUnderscorecardsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_update_cards.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-update_cards",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UpdateUnderscorecardsLogGroup"
      ]
    },
    "CreateUnderscoretopicLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_create_topic.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-create_topic",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateUnderscoretopicLogGroup"
      ]
    },
    "GetUnderscoretopicLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_get_topic.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-get_topic",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetUnderscoretopicLogGroup"
      ]
    },
    "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_get_topic_by_category.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-get_topic_by_category",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetUnderscoretopicUnderscorebyUnderscorecategoryLogGroup"
      ]
    },
    "UpdateUnderscoretopicLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_update_topic.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-update_topic",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UpdateUnderscoretopicLogGroup"
      ]
    },
    "CreateUnderscorecategoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_create_category.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-create_category",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateUnderscorecategoryLogGroup"
      ]
    },
    "GetUnderscorecategoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_get_category.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-get_category",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetUnderscorecategoryLogGroup"
      ]
    },
    "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_get_category_by_user.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-get_category_by_user",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetUnderscorecategoryUnderscorebyUnderscoreuserLogGroup"
      ]
    },
    "UpdateUnderscorecategoryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_update_category.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-update_category",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UpdateUnderscorecategoryLogGroup"
      ]
    },
    "CreateUnderscoreloginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_create_login.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-create_login",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateUnderscoreloginLogGroup"
      ]
    },
    "GetUnderscoreloginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_get_login.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-get_login",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetUnderscoreloginLogGroup"
      ]
    },
    "UpdateUnderscoreloginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/aws-python/dev/1691880923023-2023-08-12T22:55:23.023Z/aws-python.zip"
        },
        "Handler": "s_update_login.handler",
        "Runtime": "python3.9",
        "FunctionName": "aws-python-dev-update_login",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "host": "dev-flashcard.cluster-cpceqjvumies.us-east-1.rds.amazonaws.com",
            "user": "flash",
            "password": "flashcard",
            "database": "flashcards"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UpdateUnderscoreloginLogGroup"
      ]
    },
    "PingLambdaVersion2NXuYuFpzfS2IJTwKiSCS8s1XfT9esyWT05SJakEag": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PingLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "CreateUnderscorecardsLambdaVersiono2TKywfLUvYF6ZOydUGllzozHo80qgf7KSSMbsuTATc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateUnderscorecardsLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "GetUnderscorecardsLambdaVersionZhmJnu57H275Bg7jX07Q0jRQQOyFNCek0t9lt3pjD8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUnderscorecardsLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaVersionq0MfJ29YLXXzejlR4zuB9MwMi2J0UdiFZ1AwraEMjKI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "UpdateUnderscorecardsLambdaVersion5IS97j9yoHtAfrHXW9AokBtSwdy7GAuuKsmGxDG026M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateUnderscorecardsLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "CreateUnderscoretopicLambdaVersionTOPlbg6kpjx7xAeXozxdVh5waGDfpO46EVVM5QntQE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateUnderscoretopicLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "GetUnderscoretopicLambdaVersionGCAxjGmPEr7hwilwhZSMOWs9fbwHXvsqXqNFbs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUnderscoretopicLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaVersionsSzmeZjKlUkgsoROHhwX6dJC4tM8UvxlULw2PM130": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "UpdateUnderscoretopicLambdaVersionYmXbpcRLM44HDOS7Dp7i1Fx3g1Lzascce9lz3GqnL0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateUnderscoretopicLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "CreateUnderscorecategoryLambdaVersion8Hvp6qAI21LLaRZehxLqpDbCSz9K0RqyoYvwNNNk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateUnderscorecategoryLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "GetUnderscorecategoryLambdaVersionK2kLJGz7DC02eraVl8o8myePzifa72KxUpybpBHY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUnderscorecategoryLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaVersionrwhixvfkpjkdK25mQdfPqwkFgEMS8jCGQ9BfVioBWsk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "UpdateUnderscorecategoryLambdaVersion5PngxJ1TxJ21GLZRPvLKGRhMDXtn8PD1yjUKQyUmgU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateUnderscorecategoryLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "CreateUnderscoreloginLambdaVersionCamsN1vwI9nCxhuj02fcZakkDesfLU4iqJcgKDAYBk8": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateUnderscoreloginLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "GetUnderscoreloginLambdaVersion9GtlP6AhWoz8wLkEMxNkh2Jp6GHvppm2lhEUdZHuEig": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetUnderscoreloginLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "UpdateUnderscoreloginLambdaVersionfh3VGHFj5flU6OppfBEAjiZWmmPp5vUR3xHI3DiE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateUnderscoreloginLambdaFunction"
        },
        "CodeSha256": "mbiN3RmSqfYmPB009OcTv11eLD1MXs8KakmlYeYdsqg="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-aws-python",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/http-api/aws-python-dev"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        },
        "AccessLogSettings": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "HttpApiLogGroup",
              "Arn"
            ]
          },
          "Format": "{\"requestTime\":\"$context.requestTime\",\"requestId\":\"$context.requestId\",\"apiId\":\"$context.apiId\",\"resourcePath\":\"$context.routeKey\",\"path\":\"$context.path\",\"httpMethod\":\"$context.httpMethod\",\"stage\":\"$context.stage\",\"status\":\"$context.status\",\"integrationStatus\":\"$context.integrationStatus\",\"integrationLatency\":\"$context.integrationLatency\",\"responseLatency\":\"$context.responseLatency\",\"responseLength\":\"$context.responseLength\",\"errorMessage\":\"$context.error.message\",\"format\":\"SLS_HTTP_API_LOG\",\"version\":\"1.0.0\"}"
        }
      },
      "DependsOn": "HttpApiLogGroup"
    },
    "PingLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PingLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationPing": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "PingLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetPing": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /ping",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationPing"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationPing"
    },
    "CreateUnderscorecardsLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateUnderscorecardsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCreateUnderscorecards": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CreateUnderscorecardsLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostCreatecards": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /create_cards",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCreateUnderscorecards"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCreateUnderscorecards"
    },
    "GetUnderscorecardsLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscorecardsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetUnderscorecards": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetUnderscorecardsLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetReadcardsIdcardVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /readCards/{id_card}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetUnderscorecards"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetUnderscorecards"
    },
    "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetUnderscorecardsUnderscorebyUnderscoretopic": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetGetcardsbytopicIdtopicVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /get_cards_by_topic/{id_topic}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetUnderscorecardsUnderscorebyUnderscoretopic"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetUnderscorecardsUnderscorebyUnderscoretopic"
    },
    "UpdateUnderscorecardsLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateUnderscorecardsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUpdateUnderscorecards": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UpdateUnderscorecardsLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePutUpdatecardsIdcardVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /update_cards/{id_card}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUpdateUnderscorecards"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUpdateUnderscorecards"
    },
    "CreateUnderscoretopicLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateUnderscoretopicLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCreateUnderscoretopic": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CreateUnderscoretopicLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostCreatetopic": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /create_topic",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCreateUnderscoretopic"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCreateUnderscoretopic"
    },
    "GetUnderscoretopicLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscoretopicLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetUnderscoretopic": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetUnderscoretopicLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetGettopicIdtopicVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /get_topic/{id_topic}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetUnderscoretopic"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetUnderscoretopic"
    },
    "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetUnderscoretopicUnderscorebyUnderscorecategory": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetGettopicbycategoryIdcategoriaVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /get_topic_by_category/{id_categoria}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetUnderscoretopicUnderscorebyUnderscorecategory"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetUnderscoretopicUnderscorebyUnderscorecategory"
    },
    "UpdateUnderscoretopicLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateUnderscoretopicLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUpdateUnderscoretopic": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UpdateUnderscoretopicLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePutUpdatetopicIdtopicVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /update_topic/{id_topic}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUpdateUnderscoretopic"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUpdateUnderscoretopic"
    },
    "CreateUnderscorecategoryLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateUnderscorecategoryLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCreateUnderscorecategory": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CreateUnderscorecategoryLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostCreatecategory": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /create_category",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCreateUnderscorecategory"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCreateUnderscorecategory"
    },
    "GetUnderscorecategoryLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscorecategoryLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetUnderscorecategory": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetUnderscorecategoryLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetGetcategoryIdcategoryVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /get_category/{id_category}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetUnderscorecategory"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetUnderscorecategory"
    },
    "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetUnderscorecategoryUnderscorebyUnderscoreuser": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetGetcategorybyuserIdusuarioVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /get_category_by_user/{id_usuario}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetUnderscorecategoryUnderscorebyUnderscoreuser"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetUnderscorecategoryUnderscorebyUnderscoreuser"
    },
    "UpdateUnderscorecategoryLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateUnderscorecategoryLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUpdateUnderscorecategory": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UpdateUnderscorecategoryLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePutUpdatecategoryIdcategoryVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /update_category/{id_category}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUpdateUnderscorecategory"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUpdateUnderscorecategory"
    },
    "CreateUnderscoreloginLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateUnderscoreloginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCreateUnderscorelogin": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CreateUnderscoreloginLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostCreatelogin": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /create_login",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCreateUnderscorelogin"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCreateUnderscorelogin"
    },
    "GetUnderscoreloginLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetUnderscoreloginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetUnderscorelogin": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetUnderscoreloginLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetGetloginIdloginVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /get_login/{id_login}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetUnderscorelogin"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetUnderscorelogin"
    },
    "UpdateUnderscoreloginLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateUnderscoreloginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUpdateUnderscorelogin": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UpdateUnderscoreloginLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePutUpdateloginIdloginVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /updateLogin/{id_login}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUpdateUnderscorelogin"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUpdateUnderscorelogin"
    },
    "CWLSubFilterPingLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "PingLogGroup"
        }
      }
    },
    "CWLSubFilterCreateUnderscorecardsLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "CreateUnderscorecardsLogGroup"
        }
      }
    },
    "CWLSubFilterGetUnderscorecardsLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "GetUnderscorecardsLogGroup"
        }
      }
    },
    "CWLSubFilterGetUnderscorecardsUnderscorebyUnderscoretopicLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "GetUnderscorecardsUnderscorebyUnderscoretopicLogGroup"
        }
      }
    },
    "CWLSubFilterUpdateUnderscorecardsLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "UpdateUnderscorecardsLogGroup"
        }
      }
    },
    "CWLSubFilterCreateUnderscoretopicLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "CreateUnderscoretopicLogGroup"
        }
      }
    },
    "CWLSubFilterGetUnderscoretopicLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "GetUnderscoretopicLogGroup"
        }
      }
    },
    "CWLSubFilterGetUnderscoretopicUnderscorebyUnderscorecategoryLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "GetUnderscoretopicUnderscorebyUnderscorecategoryLogGroup"
        }
      }
    },
    "CWLSubFilterUpdateUnderscoretopicLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "UpdateUnderscoretopicLogGroup"
        }
      }
    },
    "CWLSubFilterCreateUnderscorecategoryLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "CreateUnderscorecategoryLogGroup"
        }
      }
    },
    "CWLSubFilterGetUnderscorecategoryLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "GetUnderscorecategoryLogGroup"
        }
      }
    },
    "CWLSubFilterGetUnderscorecategoryUnderscorebyUnderscoreuserLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "GetUnderscorecategoryUnderscorebyUnderscoreuserLogGroup"
        }
      }
    },
    "CWLSubFilterUpdateUnderscorecategoryLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "UpdateUnderscorecategoryLogGroup"
        }
      }
    },
    "CWLSubFilterCreateUnderscoreloginLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "CreateUnderscoreloginLogGroup"
        }
      }
    },
    "CWLSubFilterGetUnderscoreloginLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "GetUnderscoreloginLogGroup"
        }
      }
    },
    "CWLSubFilterUpdateUnderscoreloginLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "?\"REPORT RequestId: \" ?\"SERVERLESS_ENTERPRISE\"",
        "LogGroupName": {
          "Ref": "UpdateUnderscoreloginLogGroup"
        }
      }
    },
    "CWLSubFilterHttpApiLogGroupUsEast1": {
      "Type": "AWS::Logs::SubscriptionFilter",
      "Properties": {
        "DestinationArn": "arn:aws:logs:us-east-1:802587217904:destination:2763e3ef-f172-4ee5-8198-690f45460aa4#rJLvSqJJ1dbtgBPc1K#aws-python#dev",
        "FilterPattern": "\"SLS_HTTP_API_LOG\"",
        "LogGroupName": {
          "Ref": "HttpApiLogGroup"
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-aws-python-dev-ServerlessDeploymentBucketName"
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Value": {
        "Fn::GetAtt": [
          "EnterpriseLogAccessIamRole",
          "Arn"
        ]
      },
      "Export": {
        "Name": "sls-aws-python-dev-EnterpriseLogAccessIamRole"
      }
    },
    "PingLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PingLambdaVersion2NXuYuFpzfS2IJTwKiSCS8s1XfT9esyWT05SJakEag"
      },
      "Export": {
        "Name": "sls-aws-python-dev-PingLambdaFunctionQualifiedArn"
      }
    },
    "CreateUnderscorecardsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateUnderscorecardsLambdaVersiono2TKywfLUvYF6ZOydUGllzozHo80qgf7KSSMbsuTATc"
      },
      "Export": {
        "Name": "sls-aws-python-dev-CreateUnderscorecardsLambdaFunctionQualifiedArn"
      }
    },
    "GetUnderscorecardsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetUnderscorecardsLambdaVersionZhmJnu57H275Bg7jX07Q0jRQQOyFNCek0t9lt3pjD8"
      },
      "Export": {
        "Name": "sls-aws-python-dev-GetUnderscorecardsLambdaFunctionQualifiedArn"
      }
    },
    "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetUnderscorecardsUnderscorebyUnderscoretopicLambdaVersionq0MfJ29YLXXzejlR4zuB9MwMi2J0UdiFZ1AwraEMjKI"
      },
      "Export": {
        "Name": "sls-aws-python-dev-GetUnderscorecardsUnderscorebyUnderscoretopicLambdaFunctionQualifiedArn"
      }
    },
    "UpdateUnderscorecardsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateUnderscorecardsLambdaVersion5IS97j9yoHtAfrHXW9AokBtSwdy7GAuuKsmGxDG026M"
      },
      "Export": {
        "Name": "sls-aws-python-dev-UpdateUnderscorecardsLambdaFunctionQualifiedArn"
      }
    },
    "CreateUnderscoretopicLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateUnderscoretopicLambdaVersionTOPlbg6kpjx7xAeXozxdVh5waGDfpO46EVVM5QntQE"
      },
      "Export": {
        "Name": "sls-aws-python-dev-CreateUnderscoretopicLambdaFunctionQualifiedArn"
      }
    },
    "GetUnderscoretopicLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetUnderscoretopicLambdaVersionGCAxjGmPEr7hwilwhZSMOWs9fbwHXvsqXqNFbs"
      },
      "Export": {
        "Name": "sls-aws-python-dev-GetUnderscoretopicLambdaFunctionQualifiedArn"
      }
    },
    "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaVersionsSzmeZjKlUkgsoROHhwX6dJC4tM8UvxlULw2PM130"
      },
      "Export": {
        "Name": "sls-aws-python-dev-GetUnderscoretopicUnderscorebyUnderscorecategoryLambdaFunctionQualifiedArn"
      }
    },
    "UpdateUnderscoretopicLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateUnderscoretopicLambdaVersionYmXbpcRLM44HDOS7Dp7i1Fx3g1Lzascce9lz3GqnL0"
      },
      "Export": {
        "Name": "sls-aws-python-dev-UpdateUnderscoretopicLambdaFunctionQualifiedArn"
      }
    },
    "CreateUnderscorecategoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateUnderscorecategoryLambdaVersion8Hvp6qAI21LLaRZehxLqpDbCSz9K0RqyoYvwNNNk"
      },
      "Export": {
        "Name": "sls-aws-python-dev-CreateUnderscorecategoryLambdaFunctionQualifiedArn"
      }
    },
    "GetUnderscorecategoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetUnderscorecategoryLambdaVersionK2kLJGz7DC02eraVl8o8myePzifa72KxUpybpBHY"
      },
      "Export": {
        "Name": "sls-aws-python-dev-GetUnderscorecategoryLambdaFunctionQualifiedArn"
      }
    },
    "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaVersionrwhixvfkpjkdK25mQdfPqwkFgEMS8jCGQ9BfVioBWsk"
      },
      "Export": {
        "Name": "sls-aws-python-dev-GetUnderscorecategoryUnderscorebyUnderscoreuserLambdaFunctionQualifiedArn"
      }
    },
    "UpdateUnderscorecategoryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateUnderscorecategoryLambdaVersion5PngxJ1TxJ21GLZRPvLKGRhMDXtn8PD1yjUKQyUmgU"
      },
      "Export": {
        "Name": "sls-aws-python-dev-UpdateUnderscorecategoryLambdaFunctionQualifiedArn"
      }
    },
    "CreateUnderscoreloginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateUnderscoreloginLambdaVersionCamsN1vwI9nCxhuj02fcZakkDesfLU4iqJcgKDAYBk8"
      },
      "Export": {
        "Name": "sls-aws-python-dev-CreateUnderscoreloginLambdaFunctionQualifiedArn"
      }
    },
    "GetUnderscoreloginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetUnderscoreloginLambdaVersion9GtlP6AhWoz8wLkEMxNkh2Jp6GHvppm2lhEUdZHuEig"
      },
      "Export": {
        "Name": "sls-aws-python-dev-GetUnderscoreloginLambdaFunctionQualifiedArn"
      }
    },
    "UpdateUnderscoreloginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateUnderscoreloginLambdaVersionfh3VGHFj5flU6OppfBEAjiZWmmPp5vUR3xHI3DiE"
      },
      "Export": {
        "Name": "sls-aws-python-dev-UpdateUnderscoreloginLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-aws-python-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-aws-python-dev-HttpApiUrl"
      }
    }
  }
}