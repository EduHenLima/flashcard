org: eduardolima
app: aws-python
service: aws-python # NOTE: update this with your service name

custom:
  pythonRequirements:
    useDownloadCache: false
    dockerizePip: true

frameworkVersion: '3'

plugins:
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.9

  environment:
    host: ${param:host}
    user: ${param:user}
    password: ${param:password}
    database: ${param:database}

functions:
  ping:
    handler: src/API/ping.pingDatabase
    events:
      - httpApi: 'GET /ping'

  # To manager cards
  create_cards:
    handler: src/API/cards/createCards.create
    events:
      - httpApi: 'POST /create_cards'
  get_cards:
    handler: src/API/cards/readCards.read
    events:
      - httpApi:
          method: GET
          path: /readCards/{id_card}
  get_cards_by_topic:
    handler: src/API/cards/getCardsByTopic.get_cards_by_topic
    events:
      - httpApi:
          method: GET
          path: /get_cards_by_topic/{id_topic}
  delete_cards:
    handler: src/API/cards/deleteCards.delete
    events:
      - httpApi:
          method: DELETE
          path: /deleteCards/{id_card}
  update_cards:
    handler: src/API/cards/updateCards.update
    events:
      - httpApi:
          method: PUT
          path: /update_cards/{id_card}

  # To manager topic
  create_topic:
    handler: src/API/topic/createTopic.create
    events:
      - httpApi: 'POST /create_topic'
  get_topic:
    handler: src/API/topic/readTopic.read
    events:
      - httpApi:
          method: GET
          path: /get_topic/{id_topic}
  get_topic_by_category:
    handler: src/API/topic/getTopicByCategory.get_topic_by_category
    events:
      - httpApi:
          method: GET
          path: /get_topic_by_category/{id_topic}
  delete_topic:
    handler: src/API/topic/deleteTopic.delete
    events:
      - httpApi:
          method: DELETE
          path: /delete_topic/{id_topic}
  update_topic:
    handler: src/API/topic/updateTopic.update
    events:
      - httpApi:
          method: PUT
          path: /update_topic/{id_topic}

  # To manager category
  create_category:
    handler: src/API/category/createCategory.create
    events:
      - httpApi: 'POST /create_category'
  get_category:
    handler: src/API/category/readCategory.read
    events:
      - httpApi:
          method: GET
          path: /get_category/{id_category}
  get_category_by_user:
    handler: src/API/category/getCategoryByUser.get_category_by_user
    events:
      - httpApi:
          method: GET
          path: /get_category_by_user/{id_user}
  delete_category:
    handler: src/API/category/deleteCategory.delete
    events:
      - httpApi:
          method: DELETE
          path: /delete_category/{id_category}
  update_category:
    handler: src/API/category/updateCategory.update
    events:
      - httpApi:
          method: PUT
          path: /update_category/{id_category}

  # To manager login
  create_login:
    handler: src/API/login/createLogin.create
    events:
      - httpApi: 'POST /create_login'
  get_login:
    handler: src/API/login/readLogin.read
    events:
      - httpApi:
          method: GET
          path: /get_login/{id_login}
  delete_login:
    handler: src/API/login/deleteLogin.delete
    events:
      - httpApi:
          method: DELETE
          path: /delete_login/{id_login}
  update_login:
    handler: src/API/login/updateLogin.update
    events:
      - httpApi:
          method: PUT
          path: /update_login/{id_login}

