org: eduardolima
app: aws-python
service: aws-python # NOTE: update this with your service name

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9

  environment:
    host: 'localhost'
    user: 'edu'
    password: 'flashcards'
    database: 'flashcards'

# 'functions' in serverless.yml
functions:
  # to teste application
  ping:
    handler: src/API/ping.pingDatabase
    events: # All events associated with this function
      - httpApi: 'POST /ping'

  # To manager cards
  create_cards:
    handler: src/API/cards/createCards.create
  get_cards:
    handler: src/API/cards/readCards.read
  get_cards_by_topic:
    handler: src/API/cards/getCardsByTopic.get_cards_by_topic
  delete_cards:
    handler: src/API/cards/deleteCards.delete
  update_cards:
    handler: src/API/cards/updateCards.update

  # To manager topic
  create_topic:
    handler: src/API/topic/createTopic.create
  get_topic:
    handler: src/API/topic/readTopic.read
  get_topic_by_category:
    handler: src/API/topic/getTopicByCategory.get_topic_by_category
  delete_topic:
    handler: src/API/topic/deleteTopic.delete
  update_topic:
    handler: src/API/topic/updateTopic.update

  # To manager category
  create_category:
    handler: src/API/category/createCategory.create
  get_category:
    handler: src/API/category/readCategory.read
  get_category_by_user:
    handler: src/API/category/getCategoryByUser.get_category_by_user
  delete_category:
    handler: src/API/category/deleteCategory.delete
  update_category:
    handler: src/API/category/updateCategory.update

  # To manager login
  create_login:
    handler: src/API/login/createLogin.create
  get_login:
    handler: src/API/login/readLogin.read
  delete_login:
    handler: src/API/login/deleteLogin.delete
  update_login:
    handler: src/API/login/updateLogin.update

